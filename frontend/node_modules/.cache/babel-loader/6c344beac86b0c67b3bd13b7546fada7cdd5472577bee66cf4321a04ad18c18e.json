{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaac Risola\\\\Desktop\\\\Teste-Jack-Experts\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\n// src/pages/Tasks.js\nimport React, { useState, useEffect } from 'react';\nimport Task from '../components/Task'; // Verifique se o caminho est치 correto\nimport TaskForm from '../components/TaskForm'; // Verifique se o caminho est치 correto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null); // Adicionando estado para tarefa selecionada\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/tasks', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Erro ao buscar tarefas');\n        }\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error('Erro ao buscar tarefas:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleAddTask = async task => {\n    try {\n      const response = await fetch('http://localhost:5000/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(task)\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao adicionar tarefa');\n      }\n      const newTask = await response.json();\n      setTasks([...tasks, newTask]);\n    } catch (error) {\n      console.error('Erro ao adicionar tarefa:', error);\n    }\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao atualizar tarefa');\n      }\n      const task = await response.json();\n      setTasks(tasks.map(t => t.id === task.id ? task : t));\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao excluir tarefa');\n      }\n      setTasks(tasks.filter(t => t.id !== id));\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      selectedTask: selectedTask,\n      setSelectedTask: setSelectedTask,\n      setTasks: setTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        onUpdateTask: handleUpdateTask,\n        onDeleteTask: handleDeleteTask,\n        setSelectedTask: setSelectedTask // Adicione isso se precisar selecionar a tarefa\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"Cvg8ZAXndLj8UIebRFAblQ+N89M=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","Task","TaskForm","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","selectedTask","setSelectedTask","fetchTasks","response","fetch","headers","localStorage","getItem","ok","Error","data","json","error","console","handleAddTask","task","method","body","JSON","stringify","newTask","handleUpdateTask","updatedTask","id","map","t","handleDeleteTask","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpdateTask","onDeleteTask","_c","$RefreshReg$"],"sources":["C:/Users/Isaac Risola/Desktop/Teste-Jack-Experts/frontend/src/pages/Tasks.js"],"sourcesContent":["// src/pages/Tasks.js\nimport React, { useState, useEffect } from 'react';\nimport Task from '../components/Task';  // Verifique se o caminho est치 correto\nimport TaskForm from '../components/TaskForm';  // Verifique se o caminho est치 correto\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null); // Adicionando estado para tarefa selecionada\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/tasks', {\n          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n        });\n        if (!response.ok) {\n          throw new Error('Erro ao buscar tarefas');\n        }\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error('Erro ao buscar tarefas:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  const handleAddTask = async (task) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/tasks', {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(task),\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao adicionar tarefa');\n      }\n      const newTask = await response.json();\n      setTasks([...tasks, newTask]);\n    } catch (error) {\n      console.error('Erro ao adicionar tarefa:', error);\n    }\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask),\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao atualizar tarefa');\n      }\n      const task = await response.json();\n      setTasks(tasks.map(t => t.id === task.id ? task : t));\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${id}`, {\n        method: 'DELETE',\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao excluir tarefa');\n      }\n      setTasks(tasks.filter(t => t.id !== id));\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Tasks</h2>\n      <TaskForm \n        selectedTask={selectedTask}\n        setSelectedTask={setSelectedTask}\n        setTasks={setTasks}\n      />\n      <ul>\n        {tasks.map(task => (\n          <Task\n            key={task.id}\n            task={task}\n            onUpdateTask={handleUpdateTask}\n            onDeleteTask={handleDeleteTask}\n            setSelectedTask={setSelectedTask} // Adicione isso se precisar selecionar a tarefa\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}