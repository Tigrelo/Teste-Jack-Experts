{"ast":null,"code":"// src/axiosConfig.js\nimport axios from 'axios';\n\n// Cria uma instância do axios com a URL base da API\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000' // URL base para suas APIs\n});\n\n// Função para atualizar o cabeçalho Authorization\nconst setAuthHeader = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    instance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n};\n\n// Atualiza o cabeçalho Authorization inicialmente\nsetAuthHeader();\n\n// Interceptor para lidar com erros relacionados à autenticação\ninstance.interceptors.response.use(response => response, async error => {\n  if (error.response && error.response.status === 401) {\n    // Aqui você pode lidar com a expiração do token e tentar renová-lo\n    // Por exemplo, você pode redirecionar para a página de login\n    // ou chamar um endpoint para renovar o token.\n    // Exemplo: await refreshToken();\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","setAuthHeader","token","localStorage","getItem","defaults","headers","common","interceptors","response","use","error","status","Promise","reject"],"sources":["C:/Users/Isaac Risola/Desktop/Teste-Jack-Experts/frontend/src/axiosConfig.js"],"sourcesContent":["// src/axiosConfig.js\nimport axios from 'axios';\n\n// Cria uma instância do axios com a URL base da API\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000', // URL base para suas APIs\n});\n\n// Função para atualizar o cabeçalho Authorization\nconst setAuthHeader = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    instance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n};\n\n// Atualiza o cabeçalho Authorization inicialmente\nsetAuthHeader();\n\n// Interceptor para lidar com erros relacionados à autenticação\ninstance.interceptors.response.use(\n  response => response,\n  async error => {\n    if (error.response && error.response.status === 401) {\n      // Aqui você pode lidar com a expiração do token e tentar renová-lo\n      // Por exemplo, você pode redirecionar para a página de login\n      // ou chamar um endpoint para renovar o token.\n      // Exemplo: await refreshToken();\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;;AAEF;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTJ,QAAQ,CAACO,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;EACvE;AACF,CAAC;;AAED;AACAD,aAAa,CAAC,CAAC;;AAEf;AACAH,QAAQ,CAACU,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,IAAIA,QAAQ,EACpB,MAAME,KAAK,IAAI;EACb,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IACnD;IACA;IACA;IACA;EAAA;EAEF,OAAOC,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}