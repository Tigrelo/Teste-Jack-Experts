{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaac Risola\\\\Desktop\\\\Teste Jack Experts\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Task from '../components/Task';\nimport TaskForm from '../components/TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: ''\n  }); // Estado para nova tarefa\n\n  // Função para buscar as tarefas do servidor (GET)\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      setTasks(data);\n      toast.success('Tarefas carregadas com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao carregar tarefas!');\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Função para adicionar nova tarefa (POST)\n  const handleAddTask = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(newTask)\n      });\n      const newTaskData = await response.json();\n      setTasks([...tasks, newTaskData]);\n      setNewTask({\n        title: '',\n        description: ''\n      }); // Limpa o formulário\n      toast.success('Tarefa adicionada com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao adicionar tarefa!');\n    }\n  };\n\n  // Função para atualizar tarefa (PUT)\n  const handleUpdateTask = async task => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(task)\n      });\n      const updatedTask = await response.json();\n      setTasks(tasks.map(t => t.id === updatedTask.id ? updatedTask : t));\n      toast.success('Tarefa atualizada com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao atualizar tarefa!');\n    }\n  };\n\n  // Função para excluir tarefa (DELETE)\n  const handleDeleteTask = async id => {\n    try {\n      await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setTasks(tasks.filter(t => t.id !== id));\n      toast.success('Tarefa excluída com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao excluir tarefa!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTasks,\n      children: \"Carregar Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"T\\xEDtulo da Tarefa\",\n      value: newTask.title,\n      onChange: e => setNewTask({\n        ...newTask,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Descri\\xE7\\xE3o da Tarefa\",\n      value: newTask.description,\n      onChange: e => setNewTask({\n        ...newTask,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Adicionar Tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          onUpdateTask: handleUpdateTask,\n          onDeleteTask: handleDeleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateTask({\n            ...task,\n            completed: !task.completed\n          }),\n          children: task.completed ? 'Marcar como Incompleta' : 'Marcar como Completa'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"l58wBbTiyex3vTkiQp6fA7nH77M=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","Task","TaskForm","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","newTask","setNewTask","title","description","fetchTasks","response","fetch","headers","localStorage","getItem","data","json","success","error","handleAddTask","method","body","JSON","stringify","newTaskData","handleUpdateTask","task","id","updatedTask","map","t","handleDeleteTask","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddTask","type","placeholder","value","onChange","e","target","onUpdateTask","onDeleteTask","completed","_c","$RefreshReg$"],"sources":["C:/Users/Isaac Risola/Desktop/Teste Jack Experts/frontend/src/pages/Tasks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Task from '../components/Task'; \r\nimport TaskForm from '../components/TaskForm'; \r\n\r\nconst Tasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: '', description: '' }); // Estado para nova tarefa\r\n\r\n  // Função para buscar as tarefas do servidor (GET)\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/tasks', {\r\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      const data = await response.json();\r\n      setTasks(data);\r\n      toast.success('Tarefas carregadas com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao carregar tarefas!');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Função para adicionar nova tarefa (POST)\r\n  const handleAddTask = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/tasks', {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      });\r\n      const newTaskData = await response.json();\r\n      setTasks([...tasks, newTaskData]);\r\n      setNewTask({ title: '', description: '' }); // Limpa o formulário\r\n      toast.success('Tarefa adicionada com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao adicionar tarefa!');\r\n    }\r\n  };\r\n\r\n  // Função para atualizar tarefa (PUT)\r\n  const handleUpdateTask = async (task) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\r\n        method: 'PUT',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify(task),\r\n      });\r\n      const updatedTask = await response.json();\r\n      setTasks(tasks.map(t => t.id === updatedTask.id ? updatedTask : t));\r\n      toast.success('Tarefa atualizada com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao atualizar tarefa!');\r\n    }\r\n  };\r\n\r\n  // Função para excluir tarefa (DELETE)\r\n  const handleDeleteTask = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/tasks/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      setTasks(tasks.filter(t => t.id !== id));\r\n      toast.success('Tarefa excluída com sucesso!');\r\n    } catch (error) {\r\n      toast.error('Erro ao excluir tarefa!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tasks</h2>\r\n\r\n      {/* Botão para buscar tarefas (GET) */}\r\n      <button onClick={fetchTasks}>Carregar Tarefas</button>\r\n\r\n      {/* Formulário para adicionar nova tarefa */}\r\n      <TaskForm onAddTask={handleAddTask} />\r\n      \r\n      {/* Botões para CRUD */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Título da Tarefa\"\r\n        value={newTask.title}\r\n        onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Descrição da Tarefa\"\r\n        value={newTask.description}\r\n        onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n      />\r\n      <button onClick={handleAddTask}>Adicionar Tarefa</button>\r\n\r\n      <ul>\r\n        {tasks.map(task => (\r\n          <li key={task.id}>\r\n            <Task\r\n              task={task}\r\n              onUpdateTask={handleUpdateTask}\r\n              onDeleteTask={handleDeleteTask}\r\n            />\r\n            {/* Botão para atualizar a tarefa (PUT) */}\r\n            <button onClick={() => handleUpdateTask({ ...task, completed: !task.completed })}>\r\n              {task.completed ? 'Marcar como Incompleta' : 'Marcar como Completa'}\r\n            </button>\r\n            \r\n            {/* Botão para excluir tarefa (DELETE) */}\r\n            <button onClick={() => handleDeleteTask(task.id)}>Excluir</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}