{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaac Risola\\\\Desktop\\\\Teste-Jack-Experts\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\n// src/pages/Tasks.js\nimport React, { useState } from 'react';\nimport Task from '../components/Task';\nimport TaskForm from '../components/TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: 'Test Task',\n    description: 'This is a test task'\n  }]); // Dados mock para teste\n  const [selectedTask, setSelectedTask] = useState(null);\n  const handleAddTask = task => {\n    setTasks([...tasks, {\n      ...task,\n      id: tasks.length + 1\n    }]);\n  };\n  const handleUpdateTask = updatedTask => {\n    setTasks(tasks.map(t => t.id === updatedTask.id ? updatedTask : t));\n    setSelectedTask(null);\n  };\n  const handleDeleteTask = id => {\n    setTasks(tasks.filter(t => t.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      selectedTask: selectedTask,\n      setSelectedTask: setSelectedTask,\n      onAddTask: handleAddTask,\n      onUpdateTask: handleUpdateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        onUpdateTask: handleUpdateTask,\n        onDeleteTask: handleDeleteTask,\n        setSelectedTask: setSelectedTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"HT3dkEQF50AHDMpzGg4KBlIZSjU=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Task","TaskForm","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","id","title","description","selectedTask","setSelectedTask","handleAddTask","task","length","handleUpdateTask","updatedTask","map","t","handleDeleteTask","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","onUpdateTask","onDeleteTask","_c","$RefreshReg$"],"sources":["C:/Users/Isaac Risola/Desktop/Teste-Jack-Experts/frontend/src/pages/Tasks.js"],"sourcesContent":["// src/pages/Tasks.js\nimport React, { useState } from 'react';\nimport Task from '../components/Task';\nimport TaskForm from '../components/TaskForm';\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([\n    { id: 1, title: 'Test Task', description: 'This is a test task' }\n  ]); // Dados mock para teste\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  const handleAddTask = (task) => {\n    setTasks([...tasks, { ...task, id: tasks.length + 1 }]);\n  };\n\n  const handleUpdateTask = (updatedTask) => {\n    setTasks(tasks.map(t => t.id === updatedTask.id ? updatedTask : t));\n    setSelectedTask(null);\n  };\n\n  const handleDeleteTask = (id) => {\n    setTasks(tasks.filter(t => t.id !== id));\n  };\n\n  return (\n    <div>\n      <h2>Tasks</h2>\n      <TaskForm \n        selectedTask={selectedTask}\n        setSelectedTask={setSelectedTask}\n        onAddTask={handleAddTask}\n        onUpdateTask={handleUpdateTask}\n      />\n      <ul>\n        {tasks.map(task => (\n          <Task\n            key={task.id}\n            task={task}\n            onUpdateTask={handleUpdateTask}\n            onDeleteTask={handleDeleteTask}\n            setSelectedTask={setSelectedTask}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tasks;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CACjC;IAAES,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,WAAW,EAAE;EAAsB,CAAC,CAClE,CAAC,CAAC,CAAC;EACJ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMc,aAAa,GAAIC,IAAI,IAAK;IAC9BP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAE,GAAGQ,IAAI;MAAEN,EAAE,EAAEF,KAAK,CAACS,MAAM,GAAG;IAAE,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAMC,gBAAgB,GAAIC,WAAW,IAAK;IACxCV,QAAQ,CAACD,KAAK,CAACY,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACX,EAAE,KAAKS,WAAW,CAACT,EAAE,GAAGS,WAAW,GAAGE,CAAC,CAAC,CAAC;IACnEP,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMQ,gBAAgB,GAAIZ,EAAE,IAAK;IAC/BD,QAAQ,CAACD,KAAK,CAACe,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACX,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1C,CAAC;EAED,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdvB,OAAA,CAACF,QAAQ;MACPU,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA,eAAgB;MACjCe,SAAS,EAAEd,aAAc;MACzBe,YAAY,EAAEZ;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFvB,OAAA;MAAAmB,QAAA,EACGhB,KAAK,CAACY,GAAG,CAACJ,IAAI,iBACbX,OAAA,CAACH,IAAI;QAEHc,IAAI,EAAEA,IAAK;QACXc,YAAY,EAAEZ,gBAAiB;QAC/Ba,YAAY,EAAET,gBAAiB;QAC/BR,eAAe,EAAEA;MAAgB,GAJ5BE,IAAI,CAACN,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AA2CX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}