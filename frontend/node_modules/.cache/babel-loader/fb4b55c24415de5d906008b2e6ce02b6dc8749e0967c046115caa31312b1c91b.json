{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaac Risola\\\\Desktop\\\\Teste Jack Experts\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onAddTask\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddTask({\n      title,\n      description,\n      completed: false\n    });\n    setTitle('');\n    setDescription('');\n  };\n\n  // Adiciona uma nova tarefa\n  router.post('/', async (req, res) => {\n    try {\n      const {\n        title,\n        description\n      } = req.body;\n      const task = await Task.create({\n        title,\n        description\n      });\n      res.status(201).json(task);\n    } catch (error) {\n      console.error('Error adding task:', error);\n      res.status(500).json({\n        error: 'Failed to add task'\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","onAddTask","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","completed","router","post","req","res","body","task","Task","create","status","json","error","console","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Isaac Risola/Desktop/Teste Jack Experts/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TaskForm = ({ onAddTask }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAddTask({ title, description, completed: false });\r\n    setTitle('');\r\n    setDescription('');\r\n  };\r\n\r\n\r\n\r\n// Adiciona uma nova tarefa\r\nrouter.post('/', async (req, res) => {\r\n  try {\r\n    const { title, description } = req.body;\r\n    const task = await Task.create({ title, description });\r\n    res.status(201).json(task);\r\n  } catch (error) {\r\n    console.error('Error adding task:', error);\r\n    res.status(500).json({ error: 'Failed to add task' });\r\n  }\r\n});\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBR,SAAS,CAAC;MAAEE,KAAK;MAAEE,WAAW;MAAEK,SAAS,EAAE;IAAM,CAAC,CAAC;IACnDN,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;;EAIH;EACAK,MAAM,CAACC,IAAI,CAAC,GAAG,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;IACnC,IAAI;MACF,MAAM;QAAEX,KAAK;QAAEE;MAAY,CAAC,GAAGQ,GAAG,CAACE,IAAI;MACvC,MAAMC,IAAI,GAAG,MAAMC,IAAI,CAACC,MAAM,CAAC;QAAEf,KAAK;QAAEE;MAAY,CAAC,CAAC;MACtDS,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACJ,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CP,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAqB,CAAC,CAAC;IACvD;EACF,CAAC,CAAC;EAKA,oBACEtB,OAAA;IAAMwB,QAAQ,EAAEhB,YAAa;IAAAiB,QAAA,gBAC3BzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGpB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFnC,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAEtB,WAAY;MACnBuB,QAAQ,EAAGpB,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAChDG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFnC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAAChC,EAAA,CA/CIF,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}